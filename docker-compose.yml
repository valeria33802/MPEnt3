
services:
  node:
    build:
      context: .       # La raíz del proyecto, que contiene "datos", "negocios", "controllers", etc.
      dockerfile: ./negocios/Dockerfile  # Ubicación del Dockerfile
    depends_on:
      - mysql
    ports:
      - "3000:3000"
    env_file:
    - .env 
      # Otras variables necesarias
    networks:
      - mynetwork

  mysql:
    image: mysql:8
    env_file:
    - .env 
    environment:
      MYSQL_ROOT_PASSWORD: xLpA976WaS.,l
      MYSQL_DATABASE: modp
    ports:
      - "3307:3306"  # o el puerto que decidas usar en el host
    networks:
      - mynetwork
    volumes:
    - mysql_data:/var/lib/mysql
    - ./scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

  python:
    build: ./python_api    # Ruta a la carpeta de la API en Python
    ports:
      - "3300:3300"
    env_file:
    - .env        # Mapea el puerto interno 3300 al host
    networks:
      - mynetwork

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"        # Puerto para clientes AMQP
      - "15672:15672"      # Puerto para la interfaz de administración web
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  mysql_data: